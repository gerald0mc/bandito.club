buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = "plugins"
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.0"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.github.johnrengelman.shadow"

group = 'club.bandito'
version = '0.1'
archivesBaseName = 'bandito'

configurations {
    shade
    all {
        resolutionStrategy {
            force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
        }
    }
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'club.bandito.client.mixin.MixinLoader'
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    shade('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

    annotationProcessor('org.spongepowered:mixin:0.8.2:processor') {
        exclude module: 'gson'
    }

    implementation('com.github.cabaletta:baritone:1.2.14')

    shade('cabaletta:baritone-api:1.2')

    compile('club.minnced:java-discord-rpc:2.0.2') {
        exclude module: 'jna'
    }

    implementation configurations.shade
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": "1.12.2"
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}


mixin {
    defaultObfuscationEnv 'searge'
    sourceSets {
        main {
            ext.refMap = 'refmap.bandito.json'
        }
    }
}

shadowJar {
    configurations = [project.configurations.shade]

    exclude 'dummyThing'
    exclude "LICENSE.txt"
    setClassifier("full")
}

reobf {
    shadowJar {
//        mappingType = "SEARGE"
        classpath = sourceSets.main.compileClasspath
    }
}

jar.manifest.attributes(
        "Manifest-Version": "1.0",
        "MixinConfigs": "mixins.bandito.json",
        "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
        "TweakOrder": 0,
        "FMLCorePlugin": "club.bandito.client.mixin.MixinLoader",
        "FMLCorePluginContainsFMLMod": true,
        "ForceLoadAsMod": true
)

build.dependsOn(shadowJar)